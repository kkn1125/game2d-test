"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const uWebSockets_js_1=__importDefault(require("uWebSockets.js")),global_1=require("./util/global");let count=1;const units=new Map,app=uWebSockets_js_1.default.App({}).ws("/*",{compression:uWebSockets_js_1.default.SHARED_COMPRESSOR,maxPayloadLength:16777216,idleTimeout:32,upgrade:(e,t,o)=>{console.log("An Http connection wants to become WebSocket, URL: "+t.getUrl()+"!");const s={aborted:!1},r=t.getUrl(),n=Object.fromEntries(new URLSearchParams(t.getQuery())),i=t.getHeader("sec-websocket-key"),a=t.getHeader("sec-websocket-protocol"),l=t.getHeader("sec-websocket-extensions");setTimeout(()=>{console.log("We are now done with our async task, let's upgrade the WebSocket!"),s.aborted?console.log("Ouch! Client disconnected before we could upgrade it!"):e.cork(()=>{e.upgrade({url:r,id:Number(n.id)||count},i,a,l,o),count++})},1e3),e.onAborted(()=>{s.aborted=!0})},open:e=>{console.log("[INIT] create user",count),units.set(e.id,{id:e.id,x:0,y:0,size:30}),e.subscribe("broadcast"),e.send(JSON.stringify({type:"init",id:e.id,users:Array.from(units.entries()).map(([,e])=>e)})),e.publish("broadcast",JSON.stringify({type:"list",users:Array.from(units.entries()).map(([,e])=>e)}))},message:(e,t,o)=>{var s,r,n;o?((n=new DataView(t)).getUint8(0),s=n.getUint8(1),r=n.getUint8(2),n.getUint8(3),n.getUint8(4),n.getUint8(5),n.getUint8(6),Boolean(s),Boolean(r),app.publish("broadcast",t,o)):(n=JSON.parse(Buffer.from(t).toString()),app.publish("broadcast",n))},drain:e=>{console.log("WebSocket backpressure: "+e.getBufferedAmount())},close:(e,t,o)=>{console.log("WebSocket closed"),units.delete(e.id),app.publish("broadcast",JSON.stringify({type:"out",id:e.id}))}}).any("/*",(e,t)=>{e.end("Nothing to see here!")}).listen(global_1.PORT,e=>{e?console.log("Listening to port "+global_1.PORT):console.log("Failed to listen to port "+global_1.PORT)});